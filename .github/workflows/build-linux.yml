name: Build Linux

on:
  workflow_call:
    inputs:
      kernel-repo:
        description: 'The Linux kernel repository to use.'
        default: 'torvalds/linux'
        required: false
        type: string
      rev:
        description: 'The revision to build at.'
        # By default just use the default branch HEAD.
        default: ''
        required: false
        type: string
      config:
        description: 'Path to the kernel configuration to use.'
        required: true
        type: string
    outputs:
      kernel-artifact-url:
        description: "URL of the built (and uploaded) Linux kernel"
        value: ${{ github.api_url }}/repos/${{ github.repository }}/actions/artifacts/${{ jobs.build.outputs.kernel-artifact-id }}/zip

jobs:
  build:
    name: Build Linux
    runs-on: ubuntu-latest
    outputs:
      kernel-artifact-id: ${{ steps.upload-linux-kernel.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: restore-cached-kernel
        with:
          path: |
            build/bzImage
            build/vmlinux
          key: linux-kernel-${{ inputs.rev }}-${{ hashFiles(inputs.config) }}
      - if: steps.restore-cached-kernel.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.kernel-repo }}
          ref: ${{ inputs.rev }}
          fetch-depth: 1
          path: linux/
      - if: steps.restore-cached-kernel.outputs.cache-hit != 'true'
        name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends libelf-dev
      - if: steps.restore-cached-kernel.outputs.cache-hit != 'true'
        name: Build kernel
        run: |
          config=$(readlink --canonicalize-existing ${{ inputs.config }})
          build=$(pwd)/build/

          pushd linux/
          export KBUILD_OUTPUT="${build}"
          mkdir "${KBUILD_OUTPUT}"

          KCONFIG_ALLCONFIG="${config}" make O="${KBUILD_OUTPUT}" allnoconfig

          echo "::group::config"
          cat "${KBUILD_OUTPUT}/.config"
          echo "::endgroup::"

          make O="${KBUILD_OUTPUT}" --jobs $(($(nproc) * 2)) bzImage vmlinux

          popd
          mv build/arch/x86/boot/bzImage build/
      - if: steps.restore-cached-kernel.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            build/bzImage
            build/vmlinux
          key: linux-kernel-${{ inputs.rev }}-${{ hashFiles(inputs.config) }}
      - uses: actions/upload-artifact@v4
        id: upload-linux-kernel
        # TODO: Having a single path/name may be problematic should we
        #       ever opt to reusing this workflow multiple times with
        #       different inputs.
        with:
          name: linux-kernel
          if-no-files-found: error
          # The kernel image is already compressed.
          compression-level: 0
          path: |
            build/bzImage
            build/vmlinux
